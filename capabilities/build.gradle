plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.mindstix.capabilities'
    compileSdk BuildConfig.compileSdk

    defaultConfig {
        minSdk BuildConfig.minSdk
        targetSdk BuildConfig.targetSdk
        versionCode BuildConfig.versionCode
        versionName BuildConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion BuildConfig.kotlinCompilerExtensionVersion
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = BuildConfig.jvmTarget
    }
}

dependencies {
    // Core Module Integration in capabilities
    implementation project(':core')

    implementation Deps.kore_ktx
    implementation Deps.appcompat
    // UI
    implementation Deps.compose_ui
    implementation Deps.compose_ui_graphics
    implementation Deps.ui_tooling_preview
    implementation Deps.material3
    // junit
    testImplementation Deps.junit
    androidTestImplementation Deps.test_ext_junit
    // espresso
    androidTestImplementation Deps.espresso
    // dagger hilt
    implementation Deps.hilt_android
    implementation (Deps.hilt_navigation_compose){
        exclude group: 'androidx.navigation'
    }
    kapt Deps.hilt_android_compiler
    kapt Deps.hilt_compiler
    kapt Deps.hilt_compiler_android
    // mockk
    testImplementation Deps.mockk
    // retrofit
    implementation Deps.retrofit
    implementation Deps.retrofit_gson
    implementation Deps.okhttp
    implementation Deps.okhttpLogging

}